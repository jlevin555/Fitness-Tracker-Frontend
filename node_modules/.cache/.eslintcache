[{"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\index.js":"1","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\reportWebVitals.js":"2","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\App.js":"3","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\index.js":"4","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Register.js":"5","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Header.js":"6","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Login.js":"7","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\NavBar.js":"8","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Home.js":"9","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\MyRoutines.js":"10","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Routines.js":"11","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\AddRoutine.js":"12","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\AddActivity.js":"13","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\UserRoutines.js":"14","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Activities.js":"15"},{"size":646,"mtime":1681004637131,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1681004637193,"results":"18","hashOfConfig":"17"},{"size":623,"mtime":1681096085303,"results":"19","hashOfConfig":"17"},{"size":552,"mtime":1681095792356,"results":"20","hashOfConfig":"17"},{"size":2387,"mtime":1681095992501,"results":"21","hashOfConfig":"17"},{"size":248,"mtime":1681009210375,"results":"22","hashOfConfig":"17"},{"size":2221,"mtime":1681095959798,"results":"23","hashOfConfig":"17"},{"size":2552,"mtime":1681096113170,"results":"24","hashOfConfig":"17"},{"size":159,"mtime":1681073860387,"results":"25","hashOfConfig":"17"},{"size":13982,"mtime":1681095965861,"results":"26","hashOfConfig":"17"},{"size":3538,"mtime":1681096011927,"results":"27","hashOfConfig":"17"},{"size":2181,"mtime":1681095944107,"results":"28","hashOfConfig":"17"},{"size":1889,"mtime":1681095939994,"results":"29","hashOfConfig":"17"},{"size":598,"mtime":1681096073634,"results":"30","hashOfConfig":"17"},{"size":1983,"mtime":1681095923141,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9r2zue",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\index.js",[],[],"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\App.js",["81"],[],"import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Header, NavBar } from './components';\r\n\r\nexport const token = `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTksIâ€¦3NTZ9.E1yZP_CLYYwezegawt2H6veFutcPCuLjWfTfM0HnyqA`\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState('');\r\n  \r\n  useEffect(() => {\r\n    const savedToken = localStorage.getItem('token', token)\r\n    if(savedToken) {\r\n      setToken(savedToken)\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className='container'>\r\n    <Header />\r\n    <NavBar token={token} setToken={setToken}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\index.js",[],[],"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Register.js",[],[],"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Header.js",[],[],"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Login.js",[],[],"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\NavBar.js",[],[],"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Home.js",[],[],"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\MyRoutines.js",["82"],[],"import React, { useEffect, useState } from 'react';\r\n\r\nconst fetchAllRoutines = async ( username, token ) => {\r\n    try {\r\n        const response = await fetch(`https://fitness-tracker-gsjx.onrender.com/api/users/${username}/allroutines`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n              },\r\n            });\r\n        const result = await response.json();\r\n        if (result.error) {\r\n            throw result.error;\r\n        }\r\n        return result;\r\n      } catch (error) {\r\n        console.error('Error fetching things', error);\r\n      }\r\n};\r\n\r\nconst fetchAllActivities = async () => {\r\n  try {\r\n      const response = await fetch(`https://fitness-tracker-gsjx.onrender.com/api/activities`);\r\n      const result = await response.json();\r\n      if (result.error) {\r\n          throw result.error;\r\n      }\r\n      console.log(\"Attached completed\", result)\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error fetching things', error);\r\n    }\r\n};\r\n\r\nconst attachActivity = async ( routineId, obj ) => {\r\n  try {\r\n      const response = await fetch(`https://fitness-tracker-gsjx.onrender.com/api/routines/${routineId}/activities`, {\r\n        method: \"POST\",\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(obj)\r\n      })\r\n      const result = await response.json();\r\n      if (result.error) {\r\n          throw result.error;\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error fetching things', error);\r\n    }\r\n};\r\n\r\nconst deleteRoutine = async ( routineId, token ) => {\r\n  try {\r\n      const response = await fetch(`https://fitness-tracker-gsjx.onrender.com/api/routines/${routineId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n        },\r\n      });\r\n      const result = await response.json();\r\n      if (result.error) {\r\n          throw result.error;\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error deleting', error);\r\n    }\r\n};\r\n\r\nconst updateRoutine = async ( routineId, obj, token ) => {\r\n  try {\r\n      const response = await fetch(`https://fitness-tracker-gsjx.onrender.com/api/routines/${routineId}`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n          },\r\n        body: JSON.stringify(obj)\r\n      })\r\n      const result = await response.json();\r\n      if (result.error) {\r\n          throw result.error;\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error fetching things', error);\r\n    }\r\n};\r\n\r\nconst updateRoutineActivity = async ( routineActivityId, obj, token ) => {\r\n  try {\r\n      const response = await fetch(`https://fitness-tracker-gsjx.onrender.com/api/routine_activities/${routineActivityId}`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n          },\r\n        body: JSON.stringify(obj)\r\n      })\r\n      const result = await response.json();\r\n      if (result.error) {\r\n          throw result.error;\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error fetching things', error);\r\n    }\r\n};\r\n\r\nconst deleteActFromRout = async ( routineActivityId, token ) => {\r\n  try {\r\n      const response = await fetch(`https://fitness-tracker-gsjx.onrender.com/api/routine_activities/${routineActivityId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n        },\r\n      });\r\n      const result = await response.json();\r\n      if (result.error) {\r\n          throw result.error;\r\n      }\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error deleting', error);\r\n    }\r\n};\r\n\r\nconst MyRoutines = ({ token, setToken, user }) => {\r\n    const [routines, setRoutines] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const [activities, setActivities] = useState([])\r\n    const [activityId, setactivityId] = useState('')\r\n    const [routineId, setroutineId] = useState('')\r\n    const [count, setcount] = useState('')\r\n    const [duration, setduration] = useState('')\r\n    const [name, setName] = useState('');\r\n    const [goal, setGoal] = useState('');\r\n    const [isPublic, setIsPublic] = useState('');\r\n    const [routineActivityId, setroutineActivityId] = useState('')\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          const result = await fetchAllRoutines(user, token);\r\n          setRoutines(result);\r\n          const actResult = await fetchAllActivities();\r\n          setActivities(actResult);\r\n        };\r\n    \r\n        fetchData();\r\n      }, []);\r\n\r\n      function handleOpen() {\r\n        setOpen(!open);\r\n      }\r\n\r\n      const handleAttach = async event => {\r\n        event.preventDefault();\r\n\r\n        console.log(\"NNNNNNNNNNNNNNNNNN\", event.target[4].value)\r\n\r\n        setactivityId(event.target[3].value)\r\n        setroutineId(event.target[4].value)\r\n\r\n        console.log(\"ZZZZZZZZZZZZZZZZ\", activityId, routineId, count, duration)\r\n\r\n        const obj = {\r\n          activityId, count , duration\r\n        }\r\n          await attachActivity(routineId, obj);\r\n      }\r\n\r\n      const handleDelete = async event => {\r\n        event.preventDefault();\r\n        setroutineId(event.target[1].value)\r\n        console.log(\"String\", routineId)\r\n        await deleteRoutine(routineId, token);\r\n      }\r\n\r\n      const handleUpdate = async event => {\r\n        event.preventDefault();\r\n        setroutineId(event.target[5].value)\r\n        const obj = {\r\n          name, goal, isPublic\r\n        }\r\n        console.log(\"Stringgggggggggggg\", event)\r\n        await updateRoutine(routineId, obj, token)\r\n      }\r\n\r\n      const handleActUpdate = async event => {\r\n        event.preventDefault();\r\n        setroutineActivityId(event.target[3].value)\r\n        const obj = {\r\n          count, duration\r\n        }\r\n        console.log(\"GGGGGGGGGGGGG\", event)\r\n        await updateRoutineActivity(routineActivityId, obj, token)\r\n      }\r\n\r\n      const handleActDelete = async event => {\r\n        event.preventDefault();\r\n        setroutineActivityId(event.target[1].value)\r\n        console.log(\"Stringstringstring\", event)\r\n        await deleteActFromRout(routineActivityId, token)\r\n      }\r\n\r\n    return routines.map((routine) => (\r\n      \r\n        <div key={routine.id} class=\"routine\">\r\n            <div>\r\n                <h4>{routine.name}</h4>\r\n                <form onSubmit={handleUpdate}>\r\n                    <div>\r\n                        <label>\r\n                          <p>Name</p>\r\n                            <input \r\n                              type=\"text\" \r\n                              onChange={event => setName(event.target.value)} \r\n                              placeholder=\"Name...\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                          <p>Goal</p>\r\n                            <input \r\n                              type=\"text\" \r\n                              onChange={event => setGoal(event.target.value)} \r\n                              placeholder=\"Goal...\"\r\n                            />\r\n                        </label>\r\n                        <label class=\"isPublic\">\r\n                          <p>Public Routine?</p>\r\n                                  <select \r\n                                      type='boolean' \r\n                                      value={isPublic} \r\n                                      onChange={(event) => {setIsPublic(event.target.value)}}\r\n                                  >\r\n                                      <option value=\"Yes\">Yes</option>\r\n                                      <option value=\"No\">No</option>\r\n                                  </select>\r\n                        </label>\r\n                        <br/>\r\n                          <button \r\n                            type=\"submit\">\r\n                              Double Click to Update Routine\r\n                          </button>\r\n                            <input \r\n                              value={routine.id} class=\"hidden\"\r\n                            >\r\n                            </input>\r\n                    </div>\r\n                </form>\r\n                <form onSubmit={handleDelete}>\r\n                    <div>\r\n                        <button type=\"submit\">Double Click to Delete Routine</button>\r\n                          <input value={routine.id} class=\"hidden\"></input>\r\n                    </div>\r\n                </form>\r\n\r\n                <h1>My Created Routines</h1>\r\n                <div>Id: {routine.id}</div> \r\n                <div>Creator Id: {routine.creatorId}</div> \r\n                <div>Creator Name: {routine.creatorName}</div> \r\n                <div>Public: {routine.isPublic ? \"Yes\" : \"No\"}</div> \r\n                <div>Goal: {routine.goal}</div> \r\n                <div class=\"dropdown\">\r\n                  <h2>\r\n                    Attach Activities:\r\n                  </h2>\r\n                  <button onClick={handleOpen} class=\"dropbtn\">Dropdown</button>\r\n                  <div>\r\n                    {open ? activities.map((activity) => (\r\n                      <div key={activity.id} class=\"routine\">\r\n                          <form onSubmit={handleAttach}>\r\n                              <button type=\"submit\">\r\n                                Double Click To Attach Activity\r\n                              </button>\r\n                              <h5>{activity.name}</h5>\r\n                              <label>\r\n                                <p>Count</p>\r\n                                <input \r\n                                  type=\"number\" \r\n                                  onChange={event => setcount(event.target.value)} \r\n                                  placeholder=\"Count...\"\r\n                                />\r\n                              </label>\r\n                              <label>\r\n                                <p>Duration</p>\r\n                                <input \r\n                                  type=\"number\" \r\n                                  onChange={event => setduration(event.target.value)} \r\n                                  placeholder=\"Duration...\"\r\n                                />\r\n                              </label>\r\n                              <div>id: {activity.id}</div> \r\n                              <div>Description: {activity.description}</div> \r\n                              <input value={activity.id} class=\"hidden\"></input>\r\n                              <input value={routine.id} class=\"hidden\"></input>\r\n                          </form> \r\n                      </div>\r\n                    )) : null}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <h3>Activities:</h3> \r\n                  {routine.activities.map((activity) => (\r\n                    <div key={activity.id} class=\"inner\">\r\n                        <form onSubmit={handleActDelete}>\r\n                            <div>\r\n                                <button \r\n                                    type=\"submit\">\r\n                                      Double Click to Delete Activity from Routine\r\n                                </button>\r\n                                <input \r\n                                  value={activity.routineActivityId} \r\n                                  class=\"hidden\">\r\n                                </input>\r\n                            </div>\r\n                        </form>\r\n                        <div>\r\n                          <h3>Name:</h3> \r\n                          {activity.name}</div>\r\n                        <div>Id: {activity.id}</div>\r\n                        <div>Description: {activity.description}</div> \r\n                        <div>Duration: {activity.duration}</div> \r\n                        <div>Count: {activity.count}</div> \r\n                        <form onSubmit={handleActUpdate}>\r\n                            <div>\r\n                              <label>\r\n                                <p>Count</p>\r\n                                <input \r\n                                  type=\"number\" \r\n                                  onChange={event => setcount(event.target.value)} \r\n                                  placeholder=\"Count...\"\r\n                                />\r\n                              </label>\r\n                              <label>\r\n                                <p>Duration</p>\r\n                                <input \r\n                                  type=\"number\" \r\n                                  onChange={event => setduration(event.target.value)} \r\n                                  placeholder=\"Duration...\"\r\n                                />\r\n                              </label>\r\n                                <button type=\"submit\">\r\n                                  Double Click to Update Activity\r\n                                </button>\r\n                                <input \r\n                                  value={activity.routineActivityId} \r\n                                  class=\"hidden\">\r\n                                </input>\r\n                            </div>\r\n                        </form>\r\n                        <div>RoutineActivityId: \r\n                          {activity.routineActivityId}\r\n                        </div> \r\n                        <div>RoutineId: \r\n                          {activity.routineId}\r\n                        </div> \r\n                    </div>))}</div> \r\n            </div> \r\n        </div>\r\n    ))\r\n\r\n    //renderAllPosts(posts)\r\n    //renderLogin()\r\n    //renderRegister()\r\n    //renderNewPostForm()\r\n}\r\n\r\nexport default MyRoutines;","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Routines.js",["83","84","85","86","87"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport { UserRoutines } from '.'\r\n\r\nconst fetchAllRoutines = async () => {\r\n    try {\r\n        const response = await fetch(`https://fitness-tracker-gsjx.onrender.com/api/routines`);\r\n        const result = await response.json();\r\n        if (result.error) {\r\n            throw result.error;\r\n        }\r\n        return result;\r\n      } catch (error) {\r\n        console.error('Error fetching things', error);\r\n      }\r\n};\r\n\r\nconst fetchUserRoutines = async (username) => {\r\n    try {\r\n        const response = await fetch(`https://fitness-tracker-gsjx.onrender.com/api/users/${username}/routines`);\r\n        const result = await response.json();\r\n        if (result.error) {\r\n            throw result.error;\r\n        }\r\n        console.log(result)\r\n        return result;\r\n      } catch (error) {\r\n        console.error('Error fetching things', error);\r\n      }\r\n};\r\n\r\n\r\n\r\n\r\nconst Routines = ({ token }) => {\r\n    const [routines, setRoutines] = useState([])\r\n    const [name, setName] = useState();\r\n    const [open, setOpen] = useState(false);\r\n    const [userR, setuserR] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          const result = await fetchAllRoutines();\r\n          setRoutines(result);\r\n\r\n        };\r\n    \r\n        fetchData();\r\n      }, []);\r\n\r\n      const handleUserRoutines = async event => {\r\n        event.preventDefault();\r\n        setName(event.target[1].value)\r\n        console.log(\"Stringstringstring\", event)\r\n        // const userRout = await fetchUserRoutines(name)\r\n        // setuserR(userRout)\r\n      }\r\n      \r\n    return routines.map((routine) => (\r\n        <div key={routine.id} class=\"routine\">\r\n            <div>\r\n                <h1>{routine.name}</h1>\r\n                <div>Id: {routine.id}</div> \r\n                <div>Creator Id: {routine.creatorId}</div> \r\n                <div>Creator Name: {routine.creatorName}</div> \r\n                <form onSubmit={handleUserRoutines}>\r\n                    <div>\r\n                        <button type=\"submit\">\r\n                            <Link className='userroutines' to='/user/routines'>\r\n                                View User Routines (DOES NOT WORK YET)\r\n                            </Link>\r\n                        </button>\r\n                        <Routes>\r\n                            <Route path='/user/routines' element={<UserRoutines name={ name }/>} />\r\n                        </Routes>\r\n                        <input value={routine.creatorName} class=\"hidden\"></input>\r\n                    </div>\r\n                </form>                \r\n                <div>Public: {routine.isPublic ? \"Yes\" : \"No\"}</div> \r\n                <div>Goal: {routine.goal}</div> \r\n                <div><h3>Activities:</h3> {routine.activities.map((activity) => (\r\n                    <div key={activity.id} class=\"inner\">\r\n                        <div>Id: {activity.id}</div> \r\n                        <div>Name: {activity.name}</div> \r\n                        <div>Description: {activity.description}</div> \r\n                        <div>Duration: {activity.duration}</div> \r\n                        <div>Count: {activity.count}</div> \r\n                        <div>RoutineActivityId: {activity.routineActivityId}</div> \r\n                        <div>RoutineId: {activity.routineId}</div> \r\n                    </div>))}</div> \r\n            </div> \r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Routines;","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\AddRoutine.js",[],[],"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\AddActivity.js",[],[],"C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\UserRoutines.js",["88"],[],"import React from 'react';\r\n\r\nconst fetchUserRoutines = async (username) => {\r\n    try {\r\n        const response = await fetch(`https://fitness-tracker-gsjx.onrender.com/api/users/${username}/routines`);\r\n        const result = await response.json();\r\n        if (result.error) {\r\n            throw result.error;\r\n        }\r\n        console.log(result)\r\n        return result;\r\n      } catch (error) {\r\n        console.error('Error fetching things', error);\r\n      }\r\n};\r\n\r\nconst UserRoutines = ({ token }) => {\r\n\r\n\r\n    return <div>\r\n        Username\r\n    </div>\r\n}\r\n\r\nexport default UserRoutines;","C:\\Users\\jlevi\\OneDrive\\Desktop\\course_work\\Fitness-Tracker-New\\UNIV_FitnessTracker_Frontend\\src\\components\\Activities.js",[],[],{"ruleId":"89","severity":1,"message":"90","line":15,"column":6,"nodeType":"91","endLine":15,"endColumn":8,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":154,"column":10,"nodeType":"91","endLine":154,"endColumn":12,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":18,"column":7,"nodeType":"97","messageId":"98","endLine":18,"endColumn":24},{"ruleId":"95","severity":1,"message":"99","line":38,"column":12,"nodeType":"97","messageId":"98","endLine":38,"endColumn":16},{"ruleId":"95","severity":1,"message":"100","line":38,"column":18,"nodeType":"97","messageId":"98","endLine":38,"endColumn":25},{"ruleId":"95","severity":1,"message":"101","line":39,"column":12,"nodeType":"97","messageId":"98","endLine":39,"endColumn":17},{"ruleId":"95","severity":1,"message":"102","line":39,"column":19,"nodeType":"97","messageId":"98","endLine":39,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":3,"column":7,"nodeType":"97","messageId":"98","endLine":3,"endColumn":24},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has missing dependencies: 'token' and 'user'. Either include them or remove the dependency array.",["104"],"no-unused-vars","'fetchUserRoutines' is assigned a value but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'userR' is assigned a value but never used.","'setuserR' is assigned a value but never used.",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [token]",{"range":"109","text":"110"},"Update the dependencies array to be: [token, user]",{"range":"111","text":"112"},[460,462],"[token]",[4895,4897],"[token, user]"]